{"remainingRequest":"/Users/xyingliu/code/blog/vuepress-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/xyingliu/code/blog/vuepress-blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xyingliu/code/blog/vuepress-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xyingliu/code/blog/vuepress-blog/node_modules/vuepress-theme-antdocs/components/NavLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xyingliu/code/blog/vuepress-blog/node_modules/vuepress-theme-antdocs/components/NavLinks.vue","mtime":1646273442699},{"path":"/Users/xyingliu/code/blog/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":1646273456409},{"path":"/Users/xyingliu/code/blog/vuepress-blog/node_modules/babel-loader/lib/index.js","mtime":1646273456364},{"path":"/Users/xyingliu/code/blog/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":1646273456409},{"path":"/Users/xyingliu/code/blog/vuepress-blog/node_modules/vue-loader/lib/index.js","mtime":1646273457166}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMveHlpbmdsaXUvY29kZS9ibG9nL3Z1ZXByZXNzLWJsb2cvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50ZXN0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN1YnN0ci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmVycm9yLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZG90LWFsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5zdGlja3kuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyByZXNvbHZlTmF2TGlua0l0ZW0sIGVuc3VyZUV4dCB9IGZyb20gJy4uL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ05hdkxpbmtzJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3VycmVudFN0eWxlOiB0aGlzLiRzdG9yZS5zdGF0ZS5uYXZTdHlsZSwKICAgICAgcm91dGVzUGF0aDogJycKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5yb3V0ZXNQYXRoID0gSlNPTi5zdHJpbmdpZnkodGhpcy4kdGhlbWVDb25maWcubG9jYWxlcyA/IHRoaXMuJHRoZW1lQ29uZmlnLmxvY2FsZXNbdGhpcy4kbG9jYWxlUGF0aF0ubmF2IDogdGhpcy4kdGhlbWVDb25maWcubmF2KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGlzRXh0bGluazogZnVuY3Rpb24gaXNFeHRsaW5rKHBhdGgpIHsKICAgICAgdmFyIFJlZyA9IC9eKD86aHR0cChzKT86XC9cLyk/W1x3Li1dKyg/OlwuW1x3XC4tXSspK1tcd1wtXC5ffjovPyNbXF1AIVwkJidcKlwrLDs9Ll0rJC87CiAgICAgIHJldHVybiBSZWcudGVzdChwYXRoKTsKICAgIH0sCiAgICBsaW5rOiBmdW5jdGlvbiBsaW5rKHVybCkgewogICAgICB1cmwgPSB0eXBlb2YgdXJsID09PSAndW5kZWZpbmVkJyA/ICcnIDogdXJsOwoKICAgICAgdmFyIF91cmwgPSBlbnN1cmVFeHQodXJsKTsKCiAgICAgIF91cmwgPSBfdXJsLmxlbmd0aCA9PT0gNSAmJiBfdXJsID09PSAnLmh0bWwnID8gdGhpcy5nZW5lS2V5KCkgOiBfdXJsOwogICAgICByZXR1cm4gX3VybDsKICAgIH0sCiAgICBnZW5lS2V5OiBmdW5jdGlvbiBnZW5lS2V5KCkgewogICAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDEwKSArIG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgfSwKICAgIGN1cnJlbnRQYXRoOiBmdW5jdGlvbiBjdXJyZW50UGF0aChwYXRoKSB7CiAgICAgIHZhciBhcnJheSA9IHRoaXMucm91dGVzUGF0aDsKCiAgICAgIGlmIChhcnJheS5pbmRleE9mKHBhdGgpICE9IC0xKSB7CiAgICAgICAgcmV0dXJuIHBhdGg7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIF9zdWZmaXggPSBwYXRoLnNsaWNlKC01KTsKCiAgICAgICAgaWYgKF9zdWZmaXggPT09ICcuaHRtbCcpIHsKICAgICAgICAgIHZhciBfcGF0aCA9IHBhdGgucmVwbGFjZSgnLmh0bWwnLCAnJyk7CgogICAgICAgICAgaWYgKGFycmF5LmluZGV4T2YoX3BhdGgpICE9IC0xKSB7CiAgICAgICAgICAgIHJldHVybiBwYXRoOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIF9wYXRoMiA9IHBhdGgucmVwbGFjZSgvW15cL10rJC8sICcnKTsKCiAgICAgICAgICAgIHJldHVybiBfcGF0aDI7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhciBfcGF0aDMgPSBwYXRoLnJlcGxhY2UoL1teXC9dKyQvLCAnJyk7CgogICAgICAgICAgcmV0dXJuIF9wYXRoMzsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjdXJyZW50UGFnZTogZnVuY3Rpb24gY3VycmVudFBhZ2UoKSB7CiAgICAgIHJldHVybiBbdGhpcy5jdXJyZW50UGF0aCh0aGlzLiRwYWdlLnBhdGgpXTsKICAgIH0sCiAgICB1c2VyTmF2OiBmdW5jdGlvbiB1c2VyTmF2KCkgewogICAgICByZXR1cm4gdGhpcy4kdGhlbWVMb2NhbGVDb25maWcubmF2IHx8IHRoaXMuJHNpdGUudGhlbWVDb25maWcubmF2IHx8IFtdOwogICAgfSwKICAgIG5hdjogZnVuY3Rpb24gbmF2KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGxvY2FsZXMgPSB0aGlzLiRzaXRlLmxvY2FsZXM7CgogICAgICBpZiAobG9jYWxlcyAmJiBPYmplY3Qua2V5cyhsb2NhbGVzKS5sZW5ndGggPiAxKSB7CiAgICAgICAgdmFyIGN1cnJlbnRMaW5rID0gdGhpcy4kcGFnZS5wYXRoOwogICAgICAgIHZhciByb3V0ZXMgPSB0aGlzLiRyb3V0ZXIub3B0aW9ucy5yb3V0ZXM7CiAgICAgICAgdmFyIHRoZW1lTG9jYWxlcyA9IHRoaXMuJHNpdGUudGhlbWVDb25maWcubG9jYWxlcyB8fCB7fTsKICAgICAgICB2YXIgbGFuZ3VhZ2VEcm9wZG93biA9IHsKICAgICAgICAgIHRleHQ6IHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLnNlbGVjdFRleHQgfHwgJ0xhbmd1YWdlcycsCiAgICAgICAgICBhcmlhTGFiZWw6IHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLmFyaWFMYWJlbCB8fCAnU2VsZWN0IGxhbmd1YWdlJywKICAgICAgICAgIGl0ZW1zOiBPYmplY3Qua2V5cyhsb2NhbGVzKS5tYXAoZnVuY3Rpb24gKHBhdGgpIHsKICAgICAgICAgICAgdmFyIGxvY2FsZSA9IGxvY2FsZXNbcGF0aF07CiAgICAgICAgICAgIHZhciB0ZXh0ID0gdGhlbWVMb2NhbGVzW3BhdGhdICYmIHRoZW1lTG9jYWxlc1twYXRoXS5sYWJlbCB8fCBsb2NhbGUubGFuZzsKICAgICAgICAgICAgdmFyIGxpbms7IC8vIFN0YXkgb24gdGhlIGN1cnJlbnQgcGFnZQoKICAgICAgICAgICAgaWYgKGxvY2FsZS5sYW5nID09PSBfdGhpcy4kbGFuZykgewogICAgICAgICAgICAgIGxpbmsgPSBjdXJyZW50TGluazsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyBUcnkgdG8gc3RheSBvbiB0aGUgc2FtZSBwYWdlCiAgICAgICAgICAgICAgbGluayA9IGN1cnJlbnRMaW5rLnJlcGxhY2UoX3RoaXMuJGxvY2FsZUNvbmZpZy5wYXRoLCBwYXRoKTsgLy8gZmFsbGJhY2sgdG8gaG9tZXBhZ2UKCiAgICAgICAgICAgICAgaWYgKCFyb3V0ZXMuc29tZShmdW5jdGlvbiAocm91dGUpIHsKICAgICAgICAgICAgICAgIHJldHVybiByb3V0ZS5wYXRoID09PSBsaW5rOwogICAgICAgICAgICAgIH0pKSB7CiAgICAgICAgICAgICAgICBsaW5rID0gcGF0aDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgdGV4dDogdGV4dCwKICAgICAgICAgICAgICBsaW5rOiBsaW5rCiAgICAgICAgICAgIH07CiAgICAgICAgICB9KQogICAgICAgIH07CiAgICAgICAgcmV0dXJuIFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy51c2VyTmF2KSwgW2xhbmd1YWdlRHJvcGRvd25dKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMudXNlck5hdjsKICAgIH0sCiAgICB1c2VyTGlua3M6IGZ1bmN0aW9uIHVzZXJMaW5rcygpIHsKICAgICAgdmFyIGN1ck5hdiA9ICh0aGlzLm5hdiB8fCBbXSkubWFwKGZ1bmN0aW9uIChsaW5rKSB7CiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocmVzb2x2ZU5hdkxpbmtJdGVtKGxpbmspLCB7CiAgICAgICAgICBpdGVtczogKGxpbmsuaXRlbXMgfHwgW10pLm1hcChyZXNvbHZlTmF2TGlua0l0ZW0pCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICB0aGlzLnJvdXRlc1BhdGggPSBKU09OLnN0cmluZ2lmeShjdXJOYXYpOwogICAgICByZXR1cm4gY3VyTmF2OwogICAgfSwKICAgIHJlcG9MaW5rOiBmdW5jdGlvbiByZXBvTGluaygpIHsKICAgICAgdmFyIHJlcG8gPSB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLnJlcG87CgogICAgICBpZiAocmVwbykgewogICAgICAgIHJldHVybiAvXmh0dHBzPzovLnRlc3QocmVwbykgPyByZXBvIDogImh0dHBzOi8vZ2l0aHViLmNvbS8iLmNvbmNhdChyZXBvKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAogICAgcmVwb0xhYmVsOiBmdW5jdGlvbiByZXBvTGFiZWwoKSB7CiAgICAgIGlmICghdGhpcy5yZXBvTGluaykgcmV0dXJuOwoKICAgICAgaWYgKHRoaXMuJHNpdGUudGhlbWVDb25maWcucmVwb0xhYmVsKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHNpdGUudGhlbWVDb25maWcucmVwb0xhYmVsOwogICAgICB9CgogICAgICB2YXIgcmVwb0hvc3QgPSB0aGlzLnJlcG9MaW5rLm1hdGNoKC9eaHR0cHM/OlwvXC9bXi9dKy8pWzBdOwogICAgICB2YXIgcGxhdGZvcm1zID0gWydnaXRodWInLCAnZ2l0bGFiJ107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBsYXRmb3Jtcy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBwbGF0Zm9ybSA9IHBsYXRmb3Jtc1tpXTsKCiAgICAgICAgaWYgKG5ldyBSZWdFeHAocGxhdGZvcm0sICdpJykudGVzdChyZXBvSG9zdCkpIHsKICAgICAgICAgIHJldHVybiBwbGF0Zm9ybTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiAnZ2xvYmFsJzsKICAgIH0KICB9Cn07"},null]}